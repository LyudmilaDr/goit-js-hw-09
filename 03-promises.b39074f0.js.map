{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAC1BC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBASF,IARA,IAEmBC,EAAfF,EAAEG,cADJC,SAAWC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAaC,OAAOJ,EAAMK,OACvBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAE1BG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAAE,CAC3D,IAAMC,EAASN,GAA2B,IAAbK,EAAiB,EAAIF,EAElDzB,EAAc,CAACE,SAAAyB,EAAUxB,MAAAyB,IACxBC,MAAK,SAAA5B,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAChB2B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvE+B,OAAM,SAAAjC,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjB2B,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e){\n  e.preventDefault();\n  const{\n    elements: {delay, step, amount },\n  } = e.currentTarget;\n  \n let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n \n  for(let position = 1; position <= amountInput; position += 1){\n    const delay = (delayInput += position === 1 ? 0 : stepInput);\n\n    createPromise({position, delay})\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n}\n\nfunction createPromise({position, delay}) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() =>{\n      if (shouldResolve) {\n        resolve({position, delay});\n      }else {\n        reject({position, delay});\n      }  \n    }, delay);\n  });\n } \n \n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay2","step","amount","delayInput","Number","value","stepInput","amountInput","position1","delay1","then","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b39074f0.js.map"}